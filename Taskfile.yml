version: '3'

vars:
  BINARY_NAME: infer
  MAIN_PACKAGE: .
  VERSION:
    sh: echo "${VERSION:-$(git describe --tags --always --dirty 2>/dev/null || echo "dev")}"
  COMMIT:
    sh: echo "${COMMIT:-$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")}"
  DATE:
    sh: echo "${DATE:-$(date -u +"%Y-%m-%dT%H:%M:%SZ")}"

tasks:
  default:
    desc: Show available tasks
    cmds:
      - task --list

  build:
    desc: Build the CLI binary
    cmds:
      - go build -ldflags "-X github.com/inference-gateway/cli/cmd.version={{.VERSION}} -X github.com/inference-gateway/cli/cmd.commit={{.COMMIT}} -X github.com/inference-gateway/cli/cmd.date={{.DATE}}" -o {{.BINARY_NAME}} {{.MAIN_PACKAGE}}
    sources:
      - "**/*.go"
      - go.mod
      - go.sum
    generates:
      - "{{.BINARY_NAME}}"

  install:
    desc: Install the CLI from source
    cmds:
      - go install -ldflags "-X github.com/inference-gateway/cli/cmd.version={{.VERSION}} -X github.com/inference-gateway/cli/cmd.commit={{.COMMIT}} -X github.com/inference-gateway/cli/cmd.date={{.DATE}}" {{.MAIN_PACKAGE}}

  clean:
    desc: Clean build artifacts
    cmds:
      - rm -f {{.BINARY_NAME}}
      - go clean

  test:
    desc: Run all tests
    cmds:
      - go test ./...

  test:verbose:
    desc: Run tests with verbose output
    cmds:
      - go test -v ./...

  test:coverage:
    desc: Run tests with coverage report
    cmds:
      - go test -cover ./...
      - go test -coverprofile=coverage.out ./...
      - go tool cover -html=coverage.out -o coverage.html

  lint:
    desc: Run linter (requires golangci-lint)
    cmds:
      - golangci-lint run
      - markdownlint . --ignore CHANGELOG.md

  fmt:
    desc: Format Go code
    cmds:
      - go fmt ./...

  vet:
    desc: Run go vet
    cmds:
      - go vet ./...

  mod:tidy:
    desc: Tidy go modules
    cmds:
      - go mod tidy

  mod:download:
    desc: Download go modules
    cmds:
      - go mod download

  run:
    desc: Run the CLI locally
    cmds:
      - go run {{.MAIN_PACKAGE}} {{.CLI_ARGS}}

  run:status:
    desc: Run status command locally
    cmds:
      - go run {{.MAIN_PACKAGE}} status

  run:version:
    desc: Run version command locally
    cmds:
      - go run {{.MAIN_PACKAGE}} version

  run:help:
    desc: Show CLI help
    cmds:
      - go run {{.MAIN_PACKAGE}} --help

  check:
    desc: Run all quality checks
    deps:
      - fmt
      - vet
      - test

  dev:
    desc: Development workflow - format, build, and test
    deps:
      - fmt
      - build
      - test

  release:build:
    desc: Build release binaries for multiple platforms
    cmds:
      - mkdir -p dist
      - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags "-X github.com/inference-gateway/cli/cmd.version={{.VERSION}} -X github.com/inference-gateway/cli/cmd.commit={{.COMMIT}} -X github.com/inference-gateway/cli/cmd.date={{.DATE}}" -o dist/{{.BINARY_NAME}}-darwin-amd64 {{.MAIN_PACKAGE}}
      - CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags "-X github.com/inference-gateway/cli/cmd.version={{.VERSION}} -X github.com/inference-gateway/cli/cmd.commit={{.COMMIT}} -X github.com/inference-gateway/cli/cmd.date={{.DATE}}" -o dist/{{.BINARY_NAME}}-darwin-arm64 {{.MAIN_PACKAGE}}
      - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-X github.com/inference-gateway/cli/cmd.version={{.VERSION}} -X github.com/inference-gateway/cli/cmd.commit={{.COMMIT}} -X github.com/inference-gateway/cli/cmd.date={{.DATE}}" -o dist/{{.BINARY_NAME}}-linux-amd64 {{.MAIN_PACKAGE}}
      - CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags "-X github.com/inference-gateway/cli/cmd.version={{.VERSION}} -X github.com/inference-gateway/cli/cmd.commit={{.COMMIT}} -X github.com/inference-gateway/cli/cmd.date={{.DATE}}" -o dist/{{.BINARY_NAME}}-linux-arm64 {{.MAIN_PACKAGE}}
      - cd dist && sha256sum {{.BINARY_NAME}}-* > checksums.txt
      - cd dist && cosign sign-blob --yes --output-signature checksums.txt.sig --output-certificate checksums.txt.pem checksums.txt

  clean:release:
    desc: Clean release artifacts
    cmds:
      - rm -rf dist/

  deps:install:
    desc: Install development dependencies
    cmds:
      - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

  setup:
    desc: Set up development environment
    deps:
      - deps:install
      - mod:download
      - precommit:install

  precommit:install:
    desc: Install pre-commit hooks
    cmds:
      - pre-commit install

  precommit:run:
    desc: Run pre-commit on all files
    cmds:
      - pre-commit run --all-files

  mocks:generate:
    desc: Generate mocks using counterfeiter
    cmds:
      - mkdir -p internal/mocks
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/domain Tool
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/domain ToolFactory
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/domain ToolService
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/domain WebSearchService
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/domain FileService
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/domain FetchService
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/ui ConversationRenderer
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/ui InputComponent
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/ui StatusComponent
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/ui HelpBarComponent
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/ui SelectionComponent
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/ui Theme
      - go run github.com/maxbrunsfeld/counterfeiter/v6 -o internal/mocks internal/ui/shared AutocompleteInterface
    sources:
      - "internal/domain/interfaces.go"
      - "internal/ui/interfaces.go"
      - "internal/ui/shared/interfaces.go"
    generates:
      - "internal/mocks/fake_tool.go"
      - "internal/mocks/fake_tool_factory.go"
      - "internal/mocks/fake_tool_service.go"
      - "internal/mocks/fake_web_search_service.go"
      - "internal/mocks/fake_file_service.go"
      - "internal/mocks/fake_fetch_service.go"
      - "internal/mocks/fake_conversation_renderer.go"
      - "internal/mocks/fake_input_component.go"
      - "internal/mocks/fake_status_component.go"
      - "internal/mocks/fake_help_bar_component.go"
      - "internal/mocks/fake_selection_component.go"
      - "internal/mocks/fake_theme.go"
      - "internal/mocks/fake_autocomplete_interface.go"

  mocks:clean:
    desc: Clean generated mock files
    cmds:
      - rm -rf internal/mocks/
