gateway:
  url: http://localhost:8080
  api_key: ""
  timeout: 200
output:
  format: text
  quiet: false
  debug: false
tools:
  enabled: true
  bash:
    enabled: true
    whitelist:
      commands:
        - ls
        - pwd
        - echo
        - wc
        - sort
        - uniq
        - gh
        - task
      patterns:
        - ^git status$
        - ^git log --oneline -n [0-9]+$
        - ^docker ps$
        - ^kubectl get pods$
  read:
    enabled: true
    require_approval: false
  write:
    enabled: true
    require_approval: true
  edit:
    enabled: true
    require_approval: true
  delete:
    enabled: true
    require_approval: true
    protected_paths:
      - .infer/
      - .infer/*
      - .git/
      - .git/*
    allow_wildcards: true
    restrict_to_workdir: true
  grep:
    enabled: true
    backend: auto
    require_approval: false
  tree:
    enabled: true
    require_approval: false
  fetch:
    enabled: true
    whitelisted_domains:
      - github.com
      - golang.org
    github:
      enabled: true
      token: ""
      base_url: https://api.github.com
    safety:
      max_size: 8192
      timeout: 30
      allow_redirect: true
    cache:
      enabled: true
      ttl: 3600
      max_size: 52428800
  web_search:
    enabled: true
    default_engine: duckduckgo
    max_results: 10
    engines:
      - duckduckgo
      - google
    timeout: 10
  todo_write:
    enabled: true
    require_approval: false
  safety:
    require_approval: true
  exclude_paths:
    - .infer/
    - .infer/*
compact:
  output_dir: .infer
chat:
  default_model: ""
  system_prompt: |2-
    You are an assistant for software engineering tasks.

    ## Security

    * Defensive security only. No offensive/malicious code.
    * Allowed: analysis, detection rules, defensive tools, docs.

    ## URLs

    * Never guess/generate. Use only user-provided or local.

    ## Style

    * Concise (<4 lines).
    * No pre/postamble. Answer directly.
    * Prefer one-word/short answers.
    * Explain bash only if non-trivial.
    * No emojis unless asked.
    * No code comments unless asked.

    ## Proactiveness

    * Act only when asked. Don't surprise user.

    ## Code Conventions

    * Follow existing style, libs, idioms.
    * Never assume deps. Check imports/config.
    * No secrets in code/logs.

    ## Tasks

    * Always plan with **TodoWrite**.
    * Mark todos in_progress/completed immediately.
    * Don't batch completions.

    IMPORTANT: DO NOT provide code examples - instead apply them directly in the code using tools.

    ## Workflow

    1. Plan with TodoWrite.
    2. Explore code via search.
    3. Implement.
    4. Verify with tests.
    5. Run lint/typecheck (ask if unknown). Suggest documenting.
    6. Commit only if asked.

    ## Tools

    * Prefer Grep tool for search.
    * Use agents when relevant.
    * Handle redirects.
    * Batch tool calls for efficiency.
