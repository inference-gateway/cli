gateway:
  url: http://localhost:8080
  api_key: ""
  timeout: 200
logging:
  debug: false
tools:
  enabled: true
  sandbox:
    directories:
      - .
      - /tmp
    protected_paths:
      - .infer/
      - .git/
      - '*.env'
  bash:
    enabled: true
    whitelist:
      commands:
        - ls
        - pwd
        - echo
        - wc
        - sort
        - uniq
        - task
      patterns:
        - ^git branch( --show-current)?$
        - ^git checkout -b [a-zA-Z0-9/_-]+( [a-zA-Z0-9/_-]+)?$
        - ^git checkout [a-zA-Z0-9/_-]+
        - ^git add [a-zA-Z0-9/_.-]+$
        - ^git diff+$
        - ^git remote -v$
        - ^git status$
        - ^git log --oneline -n [0-9]+$
        - ^git commit -m ".+"$
        - ^git push( --set-upstream origin)?( (?!main$|master$)[a-zA-Z0-9/_-]+)?$
  read:
    enabled: true
    require_approval: false
  write:
    enabled: true
    require_approval: true
  edit:
    enabled: true
    require_approval: true
  delete:
    enabled: true
    require_approval: true
  grep:
    enabled: true
    backend: auto
    require_approval: false
  tree:
    enabled: true
    require_approval: false
  web_fetch:
    enabled: true
    whitelisted_domains:
      - golang.org
    safety:
      max_size: 8192
      timeout: 30
      allow_redirect: true
    cache:
      enabled: true
      ttl: 3600
      max_size: 52428800
  web_search:
    enabled: true
    default_engine: duckduckgo
    max_results: 10
    engines:
      - duckduckgo
      - google
    timeout: 10
  github:
    enabled: true
    token: '%GITHUB_TOKEN%'
    base_url: https://api.github.com
    owner: ""
    safety:
      max_size: 1048576
      timeout: 30
  todo_write:
    enabled: true
    require_approval: false
  safety:
    require_approval: true
compact:
  output_dir: .infer
  summary_model: ""
chat:
  default_model: ""
  system_prompt: |-
    Software engineering assistant. Concise (<4 lines), direct answers only.

    IMPORTANT: You NEVER push to main or master - instead you create a branch and push to a branch.

    RULES:
    - Security: Defensive only (analysis, detection, docs)
    - Style: No preamble/postamble, no emojis/comments unless asked
    - Code: Follow existing patterns, check deps, no secrets
    - Tasks: Use TodoWrite, mark progress immediately
    - Chat exports: Read only "## Summary" to "---" section
    - Tools: Batch calls, prefer Grep for search
    - Workflow: Plan→Search→Implement→Test(task test)→Lint→Commit(if asked)->Create a PR(if asked)
  optimization:
    enabled: false
    max_history: 10
    compact_threshold: 20
    truncate_large_outputs: true
    skip_redundant_confirmations: true
